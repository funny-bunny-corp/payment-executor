
# Datasource
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username =  ${JDBC_USER}
quarkus.datasource.password =  ${JDBC_PASS}
quarkus.datasource.jdbc.url =  ${JDBC_URL}

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=update
#quarkus.hibernate-orm.database.generation=create-drop

# Kafka host configuration
kafka.bootstrap.servers=my-cluster-kafka-brokers.kafka:9092

# Payment Created
mp.messaging.incoming.payment-created.connector=smallrye-kafka
mp.messaging.incoming.payment-created.auto.offset.reset=earliest
mp.messaging.incoming.payment-created.topic=payment-processing

# Refund Created
mp.messaging.incoming.refund-created.connector=smallrye-kafka
mp.messaging.incoming.refund-created.auto.offset.reset=earliest
mp.messaging.incoming.refund-created.topic=payment-processing

# Payment Started
mp.messaging.outgoing.payment-order-started.connector=smallrye-kafka
mp.messaging.outgoing.payment-order-started.topic=payment-processing
mp.messaging.outgoing.payment-order-started.cloud-events-source=payment-executor
mp.messaging.outgoing.payment-order-started.cloud-events-type=funny-bunny.xyz.payment-processing.v1.payment-order.started
mp.messaging.outgoing.payment-order-started.cloud-events-subject=payment-order-started

# Refund Started
mp.messaging.outgoing.refund-started.connector=smallrye-kafka
mp.messaging.outgoing.refund-started.topic=payment-processing
mp.messaging.outgoing.refund-started.cloud-events-source=payment-executor
mp.messaging.outgoing.refund-started.cloud-events-type=funny-bunny.xyz.payment-processing.v1.refund.started
mp.messaging.outgoing.refund-started.cloud-events-subject=payment-order-started

# Transaction Failed
mp.messaging.outgoing.transaction-failed.connector=smallrye-kafka
mp.messaging.outgoing.transaction-failed.topic=payment-processing
mp.messaging.outgoing.transaction-failed.cloud-events-source=payment-executor
mp.messaging.outgoing.transaction-failed.cloud-events-type=funny-bunny.xyz.payment-processing.v1.payment-order.declined
mp.messaging.outgoing.transaction-failed.cloud-events-subject=payment-order-declined

# Transaction Approved
mp.messaging.outgoing.transaction-approved.connector=smallrye-kafka
mp.messaging.outgoing.transaction-approved.topic=payment-processing
mp.messaging.outgoing.transaction-approved.cloud-events-source=payment-executor
mp.messaging.outgoing.transaction-approved.cloud-events-type=funny-bunny.xyz.payment-processing.v1.payment-order.approved
mp.messaging.outgoing.transaction-approved.cloud-events-subject=payment-order-approved

# Rest Client for PSP
quarkus.rest-client."com.paymentic.adapter.http.PspRestClient".url=http://psp.payments
quarkus.rest-client."com.paymentic.adapter.http.PspRestClient".scope=jakarta.inject.Singleton

